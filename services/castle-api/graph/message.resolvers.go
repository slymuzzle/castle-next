package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"journeyhub/ent"
	"journeyhub/ent/schema/pulid"
	"journeyhub/graph/generated"
	"journeyhub/graph/middleware"
	"journeyhub/graph/model"
)

// SendMessage is the resolver for the sendMessage field.
func (r *mutationResolver) SendMessage(ctx context.Context, input model.SendMessageInput) (*ent.Message, error) {
	user := middleware.JwtUserForContext(ctx)

	if user == nil {
		return nil, middleware.ErrAccessDenied
	}

	return r.chatService.SendMessage(ctx, user.ID, *input.TargetUserID, input.Content)
}

// UpdateMessage is the resolver for the updateMessage field.
func (r *mutationResolver) UpdateMessage(ctx context.Context, input model.UpdateMessageInput) (*ent.Message, error) {
	panic(fmt.Errorf("not implemented: UpdateMessage - updateMessage"))
}

// DeleteMessage is the resolver for the deleteMessage field.
func (r *mutationResolver) DeleteMessage(ctx context.Context, roomID pulid.ID) (*ent.Room, error) {
	panic(fmt.Errorf("not implemented: DeleteMessage - deleteMessage"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
