package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"journeyhub/ent"
	"journeyhub/ent/room"
	"journeyhub/ent/schema/pulid"
	"journeyhub/ent/user"
	"journeyhub/ent/usercontact"
	"journeyhub/graph/generated"

	"entgo.io/contrib/entgql"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id pulid.ID) (ent.Noder, error) {
	return r.dbService.Client().Noder(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []pulid.ID) ([]ent.Noder, error) {
	return r.dbService.Client().Noders(ctx, ids)
}

// Rooms is the resolver for the rooms field.
func (r *queryResolver) Rooms(ctx context.Context, after *entgql.Cursor[pulid.ID], first *int, before *entgql.Cursor[pulid.ID], last *int, orderBy []*ent.RoomOrder, where *ent.RoomWhereInput) (*ent.RoomConnection, error) {
	usr, err := r.authService.Auth(ctx)
	if err != nil {
		return nil, err
	}

	return r.dbService.Client().Room.Query().
		Where(
			room.HasUsersWith(
				user.ID(usr.ID),
			),
		).
		Paginate(
			ctx,
			after,
			first,
			before,
			last,
			ent.WithRoomOrder(orderBy),
			ent.WithRoomFilter(where.Filter),
		)
}

// UserContacts is the resolver for the userContacts field.
func (r *queryResolver) UserContacts(ctx context.Context, after *entgql.Cursor[pulid.ID], first *int, before *entgql.Cursor[pulid.ID], last *int, orderBy []*ent.UserContactOrder, where *ent.UserContactWhereInput) (*ent.UserContactConnection, error) {
	usr, err := r.authService.Auth(ctx)
	if err != nil {
		return nil, err
	}

	return r.dbService.Client().UserContact.Query().
		Where(
			usercontact.UserID(usr.ID),
		).
		Paginate(
			ctx,
			after,
			first,
			before,
			last,
			ent.WithUserContactOrder(orderBy),
			ent.WithUserContactFilter(where.Filter),
		)
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) RoomMembers(ctx context.Context, after *entgql.Cursor[pulid.ID], first *int, before *entgql.Cursor[pulid.ID], last *int, orderBy []*ent.RoomMemberOrder, where *ent.RoomMemberWhereInput) (*ent.RoomMemberConnection, error) {
	_, err := r.authService.Auth(ctx)
	if err != nil {
		return nil, err
	}

	return r.dbService.Client().RoomMember.Query().
		Paginate(
			ctx,
			after,
			first,
			before,
			last,
			ent.WithRoomMemberFilter(where.Filter),
		)
}
