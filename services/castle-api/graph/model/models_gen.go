// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"journeyhub/ent"
	"journeyhub/ent/messageattachment"
	"journeyhub/ent/room"
	"journeyhub/ent/schema/pulid"
	"time"

	"github.com/99designs/gqlgen/graphql"
)

// CreateMessageLinkInput is used for create message link object.
type CreateMessageLinkInput struct {
	Link        string  `json:"link"`
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	ImageURL    *string `json:"imageURL,omitempty"`
}

// CreateRoomInput is used for create Room object.
type CreateRoomInput struct {
	Name    string     `json:"name"`
	UserIDs []pulid.ID `json:"userIDs,omitempty"`
}

type LastMessageUpdatedEvent struct {
	ID        pulid.ID  `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type LoginUser struct {
	User  *ent.User `json:"user"`
	Token string    `json:"token"`
}

type RoomMemberUpdatedEvent struct {
	ID          pulid.ID                 `json:"id"`
	Name        string                   `json:"name"`
	Version     uint64                   `json:"version"`
	Type        room.Type                `json:"type"`
	LastMessage *LastMessageUpdatedEvent `json:"lastMessage,omitempty"`
	CreatedAt   time.Time                `json:"createdAt"`
	UpdatedAt   time.Time                `json:"updatedAt"`
}

// CreateMessageInput is used for create Message object.
type SendMessageInput struct {
	RoomID       pulid.ID                  `json:"roomID"`
	NotifyUserID *pulid.ID                 `json:"notifyUserID,omitempty"`
	ReplyTo      *pulid.ID                 `json:"replyTo,omitempty"`
	Content      *string                   `json:"content,omitempty" validate:"omitempty,max=4096"`
	Files        []*UploadMessageFileInput `json:"files,omitempty" validate:"max=20"`
	Voice        *graphql.Upload           `json:"voice,omitempty" validate:"gql_upload_is_voice"`
	Links        []*CreateMessageLinkInput `json:"links,omitempty"`
}

type Subscription struct {
}

// UpdateMessageInput is used for update Message object.
type UpdateMessageInput struct {
	Content      string                    `json:"content" validate:"omitempty,max=4096"`
	ReplaceLinks []*CreateMessageLinkInput `json:"replaceLinks,omitempty"`
}

// UpdateRoomInput is used for update Room object.
type UpdateRoomInput struct {
	Name          *string    `json:"name,omitempty"`
	AddUserIDs    []pulid.ID `json:"addUserIDs,omitempty"`
	RemoveUserIDs []pulid.ID `json:"removeUserIDs,omitempty"`
	ClearUsers    *bool      `json:"clearUsers,omitempty"`
}

// UploadMessageFile is used for upload message files.
type UploadMessageFileInput struct {
	Type messageattachment.Type `json:"type"`
	File graphql.Upload         `json:"file"`
}

// UserLoginInput is used for user login.
type UserLoginInput struct {
	Nickname string `json:"nickname"`
	Password string `json:"password"`
}

// UserRegisterInput is used for user register.
type UserRegisterInput struct {
	FirstName            string `json:"firstName" validate:"min=1,max=255"`
	LastName             string `json:"lastName" validate:"min=1,max=255"`
	Nickname             string `json:"nickname" validate:"min=8,max=255"`
	Password             string `json:"password" validate:"min=8,max=64"`
	PasswordConfirmation string `json:"passwordConfirmation" validate:"min=8,max=64"`
}
