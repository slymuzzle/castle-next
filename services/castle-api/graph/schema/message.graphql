"""
UploadMessageFile is used for upload message files.
"""
input UploadMessageFileInput {
  type: MessageAttachmentType!
  file: Upload!
}

"""
CreateMessageInput is used for create Message object.
"""
input SendMessageInput {
  roomID: ID!
  notifyUserID: ID
  replyTo: ID
  content: String @goTag(key: "validate", value: "omitempty,max=4096")
  files: [UploadMessageFileInput!] @goTag(key: "validate", value: "max=20")
  voice: Upload @goTag(key: "validate", value: "gql_upload_is_voice")
  links: [CreateMessageLinkInput!]
}

"""
UpdateMessageInput is used for update Message object.
"""
input UpdateMessageInput {
  content: String! @goTag(key: "validate", value: "omitempty,max=4096")
  replaceLinks: [CreateMessageLinkInput!]
}

extend type Query {
  messagesByRoom(
    """
    Returns the elements in the list that come with the specified roomID.
    """
    roomID: ID!

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Messages returned from the connection.
    """
    orderBy: [MessageOrder!]

    """
    Filtering options for Messages returned from the connection.
    """
    where: MessageWhereInput
  ): MessageConnection!
}

extend type Mutation {
  sendMessage(input: SendMessageInput!): MessageEdge
  updateMessage(messageID: ID!, input: UpdateMessageInput!): MessageEdge
  deleteMessage(messageID: ID!): MessageEdge
}

extend type Subscription {
  messageCreated(roomID: ID!): MessageEdge!
  messageUpdated(roomID: ID!): MessageEdge!
  messageDeleted(roomID: ID!): ID!
}
