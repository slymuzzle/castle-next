version: "3.8"

x-template: &template
  restart: always
  stdin_open: true
  tty: true

x-healthcheck: &healthcheck
  retries: 3
  start_period: 3s
  start_interval: 500ms
  timeout: 3s
  interval: 10s

services:
  castle-api:
    <<: *template
    build:
      context: ./services/castle-api
      dockerfile: Dockerfile
      target: development
    environment:
      CASTLE_SERVER_PORT: 8080
      CASTLE_NOTIFICATIONS_HOST: gorush:9000
      CASTLE_LIVEKIT_ACCESS: devkey
      CASTLE_LIVEKIT_SECRET: secret
      CASTLE_NATS_HOST: nats
      CASTLE_NATS_PORT: 4222
      CASTLE_DATABASE_HOST: postgres
      CASTLE_DATABASE_PORT: 5432
      CASTLE_DATABASE_DATABASE: castle
      CASTLE_DATABASE_USER: admin
      CASTLE_DATABASE_PASSWORD: "123456"
      CASTLE_DATABASE_DRIVER: postgres
      CASTLE_S3_HOST: minio:9000
      CASTLE_S3_ACCESS: admin
      CASTLE_S3_SECRET: "12345678"
      CASTLE_S3_BUCKET: media
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./services/castle-api:/workspace

  castle-api-migrations:
    <<: *template
    build:
      context: ./services/castle-api
      dockerfile: Dockerfile
    restart: no
    command:
      [
        "migrate",
        "apply",
        "--dir",
        "file://migrations",
        "--url",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/castle?search_path=public&sslmode=disable",
      ]
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/castle-api/migrations:/migrations

  gorush:
    image: appleboy/gorush:1.18.8
    ports:
      - ${GORUSH_PORT}:80
    environment:
      GORUSH_CORE_PORT: 80
      GORUSH_GRPC_ENABLED: true
      GORUSH_GRPC_PORT: 9000
      GORUSH_ANDROID_ENABLED: true
      GORUSH_IOS_ENABLED: false
      GORUSH_QUEUE_ENGINE: nats
      GORUSH_QUEUE_NATS_ADDR: nats:4222
      GOOGLE_APPLICATION_CREDENTIALS: /etc/gorush/castle-fcm.json
    volumes:
      - ./etc/gorush/castle-fcm.json:/etc/gorush/castle-fcm.json

  livekit:
    image: livekit/livekit-server:v1.7.2
    ports:
      - 7880:7880
      - 7881:7881
      - 7882:7882
      - 50100-50200:50100-50200
    command: --config /etc/livekit/livekit.yaml
    volumes:
      - ./etc/livekit/livekit.yaml:/etc/livekit/livekit.yaml

  nats:
    <<: *template
    build:
      context: ./etc/nats
      dockerfile: Dockerfile
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "wget", "-qO-", "http://localhost:8222/healthz"]

  postgres:
    <<: *template
    build:
      context: ./etc/postgres
      dockerfile: Dockerfile
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASES: ${POSTGRES_DATABASES}
    shm_size: 512mb
    healthcheck:
      <<: *healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]

  minio:
    image: docker.io/bitnami/minio:2024
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_ADMIN_PORT}:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS}
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]

  nginx:
    <<: *template
    build:
      context: ./etc/nginx
      dockerfile: Dockerfile
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - castle-api
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
